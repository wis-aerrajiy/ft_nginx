
server {
    # Basic settings
    listen 80;                      # Port to listen on (can also specify IP: 192.168.1.1:80)
    server_name example.com www.example.com;  # Server names (multiple allowed)
    root /var/www/example.com;      # Document root directory
    
    # Default index files (tried in order)
    index index.html index.htm;
    
    # Logging configuration
    access_log /var/log/mini_nginx/example.com.access.log;
    error_log /var/log/mini_nginx/example.com.error.log;
    error_log_level info;           # Log levels: debug, info, notice, warn, error, crit
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Timeout settings (override global settings)
    client_timeout 30s;             # Client connection timeout
    keepalive_timeout 65s;          # Keep-alive connection timeout
    
    # MIME type override
    default_type application/json;  # Default MIME type for this server
    
    # Client limits
    client_max_body_size 10m;       # Maximum request body size
    
    # Basic location block for static files
    location / {
        try_files $uri $uri/ =404;  # Try to find files, then directories, then 404
        
        # Access control
        allow 192.168.1.0/24;       # Allow specific IP range
        deny all;                   # Deny everyone else
    }
    
    # Location with regular expression match (images)
    location ~* \.(jpg|jpeg|png|gif|ico)$ {
        # Cache control
        expires 30d;                # Set expires header for browser caching
        add_header Cache-Control "public, no-transform";
        
        # Headers
        add_header X-Content-Type-Options "nosniff";
    }
    
    # Location with exact match
    location = /favicon.ico {
        log_not_found off;          # Don't log missing favicon
    }
    
    # Location with prefix match for API
    location /api/ {
        # Reverse proxy setup
        proxy_pass http://localhost:8080/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Proxy cache settings
        proxy_cache cache_zone;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_min_uses 3;
        proxy_cache_use_stale error timeout invalid_header updating http_500;
    }
    
    # Restrict methods
    location /admin/ {
        limit_except GET POST {     # Only allow GET and POST
            deny all;
        }
        
        # Basic authentication
        auth_basic "Admin Area";
        auth_basic_user_file /etc/mini_nginx/.htpasswd;
    }
    
    # Location for PHP files
    location ~ \.php$ {
        # Deny access to PHP files
        deny all;
    }
    
    # Compression settings (override global)
    gzip on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/javascript application/json;
    gzip_disable "msie6";
}

# Upstream (backend) servers for load balancing
upstream app_servers {
    # Backend servers
    server 192.168.1.10:8080 weight=3;  # More weight = more traffic
    server 192.168.1.11:8080;
    server 192.168.1.12:8080 backup;    # Used only when others are down
    
    # Load balancing method
    method least_conn;  # Options: round_robin, least_conn, ip_hash
    
    # Health check settings
    health_check interval=5s fails=3 passes=2;
    
    # Session persistence (sticky sessions)
    sticky cookie srv_id expires=1h;
}

# Server block using the upstream
server {
    listen 80;
    server_name app.example.com;
    
    # Proxy to load-balanced backends
    location / {
        proxy_pass http://app_servers;
        proxy_http_version 1.1;
        proxy_set_header Connection "";  # For HTTP/1.1 keepalive to backends
    }
}

# HTTPS server block example
server {
    listen 443 ssl;
    server_name secure.example.com;
    
    # SSL settings
    ssl_certificate /etc/mini_nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/mini_nginx/ssl/example.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # SSL session settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;
    
    # Redirect all HTTP to HTTPS
    location / {
        root /var/www/secure.example.com;
    }
}

# Rate limiting example
limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

server {
    listen 80;
    server_name api.example.com;
    
    # Apply rate limiting
    location /api/ {
        limit_req zone=req_limit burst=20 nodelay;
        proxy_pass http://localhost:8080;
    }
}